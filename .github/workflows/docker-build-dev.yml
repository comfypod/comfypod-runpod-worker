name: Docker Build Dev

on:
  workflow_dispatch:
  #push:
  #  branches: [ "main" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1

jobs:
  cpu-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          # Undeclared SHA tags with latest commit from master branch
          # Only building periodic sha tagged images
          - {python: "3.10", pytorch: "2.3.0"}
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v4
      # -
      #   name: Permissions fixes
      #   run: |
      #     reponame="$(basename ${GITHUB_REPOSITORY})"
      #     target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
      #     chmod -R ug+rwX ${target}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
            img_path="ghcr.io/${{ env.PACKAGE_NAME }}"

            BASE_TAG="cpu-${{ env.UBUNTU_VERSION }}"
            echo "BASE_TAG=${BASE_TAG}" >> ${GITHUB_ENV}

            echo "Marking dev"
            TAGS="${img_path}:${BASE_TAG}-dev, ${img_path}:dev-cpu, ${img_path}:dev-cpu-jupyter"

            echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/comfyui:${{ env.BASE_TAG }}
          push: true
          # Avoids unknown/unknown architecture and extra metadata
          provenance: false
          tags: ${{ env.TAGS }}
    
  nvidia-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          # Undeclared SHA tags with latest commit from master branch
          # Only building periodic sha tagged images
          - {python: "3.10", pytorch: "2.3.0", cuda: "12.1.1-runtime"}
          - {python: "3.10", pytorch: "2.3.0", cuda: "11.8.0-runtime"}
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v4
      # -
      #   name: Permissions fixes
      #   run: |
      #     reponame="$(basename ${GITHUB_REPOSITORY})"
      #     target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
      #     chmod -R ug+rwX ${target}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          BASE_TAG="cuda-${{ matrix.build.cuda }}-${{ env.UBUNTU_VERSION }}"
          echo "BASE_TAG=${BASE_TAG}" >> ${GITHUB_ENV}

          echo "Marking dev"
          TAGS="${img_path}:${BASE_TAG}-dev, ${img_path}:dev, ${img_path}:dev-jupyter, ${img_path}:dev-cuda, ${img_path}:dev-cuda-jupyter"

          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/comfyui:${{ env.BASE_TAG }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}

  amd-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          # Undeclared SHA tags with latest commit from master branch
          # Only building periodic sha tagged images
          - {python: "3.10", pytorch: "2.3.0", rocm: "5.7-runtime"}
    steps:
      -
        name: Free Space
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v4
      # -
      #   name: Permissions fixes
      #   run: |
      #     reponame="$(basename ${GITHUB_REPOSITORY})"
      #     target="${HOME}/work/${reponame}/${reponame}/build/COPY*"
      #     chmod -R ug+rwX ${target}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
            img_path="ghcr.io/${{ env.PACKAGE_NAME }}"

            BASE_TAG="rocm-${{ matrix.build.rocm }}-${{ env.UBUNTU_VERSION }}"
            echo "BASE_TAG=${BASE_TAG}" >> ${GITHUB_ENV}

            echo "Marking dev"
            TAGS="${img_path}:${BASE_TAG}-dev, ${img_path}:dev-rocm, ${img_path}:dev-rocm-jupyter"

            echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/comfyui:${{ env.BASE_TAG }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}